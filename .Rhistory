count <- count(study$gender)
num_students <- nrow(study)
ggplot(study) + aes(x = average_score,y = num_students,
colour = parental_level_of_education) +
geom_point() + scale_colour_viridis_d()
ggplot(study, aes(x = parental_level_of_education, y = average_score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = average_score, fill = parental_level_of_education)) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
facet_wrap(~ parental_level_of_education, scales = "fixed") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score.x, fill = lunch)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
geom_errorbar(aes(ymin = average_score.x - average_score.y, ymax = average_score.x + average_score.y),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score.x, fill = lunch)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +,
ggplot(study, aes(x = lunch, y = average_score.x, fill = lunch)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
position = position_dodge(width = 0.9), width = 0.25) +
ggplot(study, aes(x = lunch, y = average_score.x, fill = lunch)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score, fill = lunch)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_errorbar(stat = "summary", fun.data = mean_se, position = "dodge", width = 0.25) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score, fill = lunch)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score, fill = lunch)) +
geom_violin(trim = FALSE, draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal() +
theme(legend.position = "none")
ggplot(study, aes(x = lunch, y = average_score, fill = lunch)) +
geom_violin(trim = FALSE, draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal() +
theme(legend.position = "none")
t.test(study$average_score ~ study$lunch, var.equal = TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create plot
ggplot() +
geom_boxplot(data = completed_data, aes(x = "Completed", y = average_score), fill = "lightblue") +
geom_boxplot(data = none_data, aes(x = "None", y = average_score), fill = "lightgreen") +
labs(x = "Test Preparation Course", y = "Average Test Score") +
theme_minimal()
library(ggplot2)
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create plot
ggplot() +
geom_boxplot(data = completed_data, aes(x = "Completed", y = average_score), fill = "lightgreen")+
geom_boxplot(data = none_data, aes(x = "None", y = average_score), fill = "red") +
labs(x = "Test Preparation Course", y = "Average Test Score") +
theme_minimal()
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightblue", "None" = "lightgreen"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5, stat = "identity") +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5, stat = "identity") +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
ggplot() + geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5, stat = "identity") +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5, stat = "identity") +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 1, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 50, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 50, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 20, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 20, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 30, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 30, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
completed_data <- subset(study, test_preparation_course == "completed")
none_data <- subset(study, test_preparation_course == "none")
# Create histograms
ggplot() +
geom_histogram(data = completed_data, aes(x = average_score, fill = "Completed"), bins = 100, alpha = 0.5) +
geom_histogram(data = none_data, aes(x = average_score, fill = "None"), bins = 100, alpha = 0.5) +
labs(x = "Average Test Score", y = "Frequency", fill = "Test Preparation Course") +
theme_minimal() +
scale_fill_manual(values = c("Completed" = "lightgreen", "None" = "red"))
ggplot(study, aes(x = average_score, fill = test_preparation_course)) + geom_histogram(binwidth = 5000) +
labs(x = "Average Test Score",y = "Frequency") +
facet_wrap(~ test_preparation_course, nrow = 2)
ggplot(study, aes(x = average_score, fill = test_preparation_course)) + geom_histogram(binwidth = 50) +
labs(x = "Average Test Score",y = "Frequency") +
facet_wrap(~ test_preparation_course, nrow = 2)
ggplot(study, aes(x = average_score, fill = test_preparation_course)) + geom_histogram(binwidth = 20) +
labs(x = "Average Test Score",y = "Frequency") +
facet_wrap(~ test_preparation_course, nrow = 2)
ggplot(study, aes(x = average_score, fill = test_preparation_course)) + geom_histogram(binwidth = 10) +
labs(x = "Average Test Score",y = "Frequency") +
facet_wrap(~ test_preparation_course, nrow = 2)
ggplot(study, aes(x = average_score, fill = test_preparation_course)) + geom_histogram(binwidth = 10) +
labs(x = "Average Test Score",y = "Frequency") +
facet_wrap(~ test_preparation_course, nrow = 2)
library(shiny)
shinyAppDir(""D:\Y2S2\NM2207\Project\JacqBernice.github.io\app.R"")
library(shiny)
shinyAppDir("D:/Y2S2/NM2207/Project/JacqBernice.github.io/app.R")
library(shiny)
shinyAppDir("D:/Y2S2/NM2207/Project/JacqBernice.github.io")
load("D:/Y2S2/NM2207/Project/JacqBernice.github.io/.RData")
rsconnect::setAccountInfo(name='jacqbernice',
token='5A7D6D075FA33AAF36DB96A614405A94',
secret='mq65Oc/v7/OJP+S9xbQ7w8I7haqSphA9SeR8UFvM')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='jacqbernice',
token='5A7D6D075FA33AAF36DB96A614405A94',
secret='mq65Oc/v7/OJP+S9xbQ7w8I7haqSphA9SeR8UFvM')
shiny::runApp()
runApp()
library(ggplot2)
ggplot(study, aes(x = gender, y = average_score, fill = gender)) +
geom_boxplot() +  # Box plot
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- mutate(average_score = round((math_score + writing_score + reading_score)/3))
View(study)
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(average_score = round((math_score + writing_score + reading_score)/3))
glimpse(study)
library(shiny); runApp('moving.R')
runApp('moving.R')
ggplot(study, aes(x = parental_level_of_education, y = average_score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(study, aes(x = gender, y = average_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
setwd("D:/Y2S2/NM2207/Project/JacqBernice.github.io")
library(ggplot2)
ggplot(study, aes(x = gender, y = average_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
library(ggplot2)
study -> read.csv("study_performance.csv")
library(ggplot2)
study -> read.csv("study_performance.csv")
library(ggplot2)
study -> read_csv("study_performance.csv")
library(tidyverse)
study <- study %>% mutate(average_score = round((math_score + writing_score + reading_score)/3))
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(average_score = round((math_score + writing_score + reading_score)/3))
glimpse(study)
ggplot(data = study, aes(x = gender, y = math_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = gender, y = writing_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = gender, y = reading_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(data = study, aes(x = Gender, y = math_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = math_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(average_score = round((math_score + writing_score + reading_score)/3))
glimpse(study)
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(ggplot2)
ggplot(study, aes(x = Gender, y = Average_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
ggplot(data = study, aes(x = Gender, y = Math_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Writing_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Reading_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Math_Score, fill = Gender)) +
geom_point() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Writing_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Reading_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Math_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Writing_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Reading_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(study, aes(x = Parental_Level_Of_Education, y = Average_Score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = Average_Score, fill = Parental_Level_Of_Education)) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
facet_wrap(~ Parental_Level_Of_Education, scales = "fixed") +
theme_minimal()
View(study)
ggplot(study, aes(x = Parental_Level_Of_Education, y = Average_Score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = Average_Score, fill = Parental_Level_Of_Education)) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
facet_wrap(~ Parental_Level_Of_Education, scales = "fixed") +
theme_minimal()
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(ggplot2)
ggplot(study, aes(x = Gender, y = Average_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
ggplot(data = study, aes(x = Gender, y = Math_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Writing_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Reading_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(study, aes(x = Parental_Level_Of_Education, y = Average_Score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = Average_Score, fill = Parental_Level_Of_Education)) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
facet_wrap(~ Parental_Level_Of_Education, scales = "fixed") +
theme_minimal()
ggplot(study, aes(x = Parental_Level_Of_Education, y = Average_Score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = Average_Score, fill = as.factor(Parental_Level_Of_Education))) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
theme_minimal()
ggplot(study, aes(x = Lunch, y = Average_Score, fill = Lunch)) +
geom_violin(trim = FALSE, draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal() +
theme(legend.position = "none")
ggplot(study, aes(x = Average_Score, fill = Test_Preparation_Course)) +
geom_density(alpha = 0.7) +
labs(x = "Average Test Score", y = "Density") +
facet_wrap(~ Test_Preparation_Course, nrow = 2)
ggplot(study, aes(x = Average_Score, fill = Test_Preparation_Course)) +
geom_density(alpha = 0.7) +
labs(x = "Average Test Score", y = "Density")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
study <- read.csv("study_performance.csv")
glimpse(study)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
View(study)
runApp()
runApp()
runApp()
View(study)
View(study)
View(study)
runApp()
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
runApp()
runApp()
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(average_score = round((math_score + writing_score + reading_score)/3))
glimpse(study)
library(ggplot2)
ggplot(study, aes(x = gender, y = average_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
ggplot(data = study, aes(x = gender, y = math_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = gender, y = writing_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = gender, y = reading_Score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(data = study, aes(x = gender, y = math_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = gender, y = writing_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = gender, y = reading_score, fill = gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(study, aes(x = parental_level_of_education, y = average_score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = average_score, fill = as.factor(parental_level_of_education))) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
theme_minimal()
ggplot(study, aes(x = lunch, y = average_score, fill = lunch)) +
geom_violin(trim = FALSE, draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal() +
theme(legend.position = "none")
ggplot(study, aes(x = average_score, fill = test_preparation_course)) +
geom_density(alpha = 0.7) +
labs(x = "Average Test Score", y = "Density")
shiny::runApp()
remove.packages("rsconnect")
install.pacKAGES("rsconnect")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='jacqbernice',
token='9EEA22B165152415E6B7BB6A6FB925D8',
secret='O8kRWRxOvOkjhKuyy6/tcVfSGzKGW1S9rqXI6qse')
library(tidyverse)
study <- read.csv("study_performance.csv")
study <- study %>% mutate(Average_Score = round((Math_Score + Writing_Score + Reading_Score)/3))
glimpse(study)
library(ggplot2)
ggplot(study, aes(x = Gender, y = Average_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Average Score", title = "Average Score by Gender")
ggplot(data = study, aes(x = Gender, y = Math_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Math Score") +
ggtitle("Math Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Writing_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Writing Score") +
ggtitle("Writing Scores by Gender")
ggplot(data = study, aes(x = Gender, y = Reading_Score, fill = Gender)) +
geom_boxplot() +
labs(x = "Gender", y = "Reading Score") +
ggtitle("Reading Scores by Gender")
ggplot(study, aes(x = Parental_Level_Of_Education, y = Average_Score)) +
geom_point() +  # Add points
labs(x = "Parent Education", y = "Academic Performance") +  # Labels for axes
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(study, aes(x = Average_Score, fill = as.factor(Parental_Level_Of_Education))) +
geom_histogram(binwidth = 5, position = "identity", alpha = 0.7) +
labs(x = "Average Score", fill = "Parent Education") +
theme_minimal()
ggplot(study, aes(x = Lunch, y = Average_Score, fill = Lunch)) +
geom_violin(trim = FALSE, draw_quantiles = c(0.25, 0.5, 0.75)) +
geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
labs(x = "Lunch", y = "Average Test Score", fill = "Lunch") +
theme_minimal() +
theme(legend.position = "none")
ggplot(study, aes(x = Average_Score, fill = Test_Preparation_Course)) +
geom_density(alpha = 0.7) +
labs(x = "Average Test Score", y = "Density")
